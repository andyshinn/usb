apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: appsearch
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: appsearch
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: appsearch
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: appsearch
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms2g -Xmx2g
        - name: allow_es_settings_modification
          value: "true"
        - name: elasticsearch.host
          value: http://elasticsearch:9200
        - name: app_search.external_url
          value: http://localhost
        image: docker.elastic.co/app-search/app-search:7.6.0
        name: appsearch
        ports:
        - containerPort: 3002
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: appsearch
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: appsearch
  namespace: default
spec:
  ports:
  - name: "3002"
    port: 3002
    targetPort: 3002
  selector:
    io.kompose.service: appsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: bot
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: bot
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: bot
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: bot
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - args:
        - python3
        - -m
        - usb.bot
        env:
        - name: APPSEARCH_PRIVATE_KEY
          value: private-hwj951shznf264tcaxd9mdvt
        - name: LOGURU_LEVEL
          value: INFO
        - name: DISCORD_TOKEN
          valueFrom:
            secretKeyRef:
              key: DISCORD_TOKEN
              name: discord-bot-token
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: dsn
              name: sentry
        image: localhost:32000/usb:b47bde6-dirty@sha256:2b24de9d7cd7eb3c1ec72f61bba7ea5e3a3875278d21865b81b7ba91b273158d
        name: bot
        volumeMounts:
        - mountPath: /thumbnails
          name: thumbnails
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: thumbnails
        persistentVolumeClaim:
          claimName: thumbnails
          readOnly: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: broker
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: broker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broker
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: broker
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_PASS
          value: wh4tsth3d34l
        - name: RABBITMQ_DEFAULT_USER
          value: celery
        - name: RABBITMQ_DEFAULT_VHOST
          value: celery
        image: rabbitmq:3.8.2
        name: broker
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: broker
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: broker
  namespace: default
spec:
  ports:
  - name: rabbitmq
    port: 5672
    targetPort: 5672
  selector:
    io.kompose.service: broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: elasticsearch
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: elasticsearch
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: elasticsearch
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Xms1g -Xmx1g
        - name: bootstrap.memory_lock
          value: "true"
        - name: cluster.name
          value: app-search-docker-cluster
        - name: discovery.type
          value: single-node
        - name: node.name
          value: es-node
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
        name: elasticsearch
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: usb-es
      restartPolicy: Always
      volumes:
      - name: usb-es
        persistentVolumeClaim:
          claimName: usb-es
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: elasticsearch
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: elasticsearch
  namespace: default
spec:
  ports:
  - name: "9200"
    port: 9200
    targetPort: 9200
  selector:
    io.kompose.service: elasticsearch
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: usb-es
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: usb-es
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""
  volumeName: usb-es
status: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: usb-es
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/usbtemp/usb-es
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: celeryflower
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: celeryflower
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: celeryflower
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: celeryflower
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - args:
        - celery
        - -A
        - usb.tasks
        - flower
        - --port=5555
        image: localhost:32000/usb:b47bde6-dirty@sha256:2b24de9d7cd7eb3c1ec72f61bba7ea5e3a3875278d21865b81b7ba91b273158d
        name: celeryflower
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: celeryflower
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: celeryflower
  namespace: default
spec:
  ports:
  - name: celeryflower
    port: 5555
    targetPort: 5555
  selector:
    io.kompose.service: celeryflower
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: k8s-ingress
  namespace: default
spec:
  rules:
  - host: appsearch.seinfeld.app
    http:
      paths:
      - backend:
          serviceName: appsearch
          servicePort: 3002
        path: /
  - host: seinfeld.app
    http:
      paths:
      - backend:
          serviceName: web
          servicePort: 5000
        path: /
  - host: flower.seinfeld.app
    http:
      paths:
      - backend:
          serviceName: celeryflower
          servicePort: 5555
        path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: result
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: result
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: result
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: result
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - args:
        - redis-server
        - --appendonly
        - "no"
        image: redis:5.0
        name: result
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: result
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: result
  namespace: default
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: result
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: web
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: web
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - args:
        - flask
        - run
        - -h
        - 0.0.0.0
        env:
        - name: APPSEARCH_PRIVATE_KEY
          value: private-hwj951shznf264tcaxd9mdvt
        - name: FLASK_APP
          value: usb.server
        image: localhost:32000/usb:b47bde6-dirty@sha256:2b24de9d7cd7eb3c1ec72f61bba7ea5e3a3875278d21865b81b7ba91b273158d
        name: web
        volumeMounts:
        - mountPath: /videos
          name: videos
        - mountPath: /thumbnails
          name: thumbnails
          readOnly: true
      volumes:
      - name: thumbnails
        persistentVolumeClaim:
          claimName: thumbnails
          readOnly: true
      - hostPath:
          path: /mnt/usbtemp/videos
          type: Directory
        name: videos
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: web
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: web
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: worker
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: worker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.7.0
        io.kompose.service: worker
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
        skaffold.dev/tag-policy: git-commit
        skaffold.dev/tail: "true"
    spec:
      containers:
      - args:
        - celery
        - -A
        - usb.tasks
        - worker
        env:
        - name: APPSEARCH_PRIVATE_KEY
          value: private-hwj951shznf264tcaxd9mdvt
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: dsn
              name: sentry
        image: localhost:32000/usb:b47bde6-dirty@sha256:2b24de9d7cd7eb3c1ec72f61bba7ea5e3a3875278d21865b81b7ba91b273158d
        name: worker
        resources: {}
        volumeMounts:
        - mountPath: /videos
          name: videos
        - mountPath: /thumbnails
          name: thumbnails
          readOnly: false
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /mnt/usbtemp/videos
          type: Directory
        name: videos
      - name: thumbnails
        persistentVolumeClaim:
          claimName: thumbnails
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.7.0
    io.kompose.service: thumbnails
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: cd893c09-db9c-469f-b81c-b1fad77e4d0b
    skaffold.dev/tag-policy: git-commit
    skaffold.dev/tail: "true"
  name: thumbnails
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
