apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: usb
  name: usb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: usb
  template:
    metadata:
      labels:
        io.kompose.service: usb
    spec:
      containers:
        - name: worker
          args: ["usb", "tasks.worker"]
          image: gcr.io/seinfeld/usb
          env:
            - name: APPSEARCH_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: appsearch
                  key: private_key
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: environment
            - name: SERVICE_NAME_BROKER
              value: $(SERVICE_NAME_BROKER)
            - name: SERVICE_NAME_RESULT
              value: $(SERVICE_NAME_RESULT)
            - name: SERVICE_NAME_APPSEARCH
              value: $(SERVICE_NAME_APPSEARCH)
            - name: LOGURU_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: logger
                  key: level
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: usb
                  key: base_url
          volumeMounts:
            - mountPath: /videos
              name: videos
              readOnly: true
            - mountPath: /thumbnails
              name: thumbnails
              readOnly: false
        - name: bot
          image: gcr.io/seinfeld/usb
          args: ["usb", "discord.run"]
          env:
            - name: APPSEARCH_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: appsearch
                  key: private_key
            - name: SERVICE_NAME_BROKER
              value: $(SERVICE_NAME_BROKER)
            - name: SERVICE_NAME_RESULT
              value: $(SERVICE_NAME_RESULT)
            - name: SERVICE_NAME_APPSEARCH
              value: $(SERVICE_NAME_APPSEARCH)
            - name: LOGURU_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: logger
                  key: level
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: usb
                  key: base_url
            - name: DISCORD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: discord-bot-token
                  key: DISCORD_TOKEN
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: environment
          volumeMounts:
            - mountPath: /thumbnails
              name: thumbnails
              readOnly: true
        - name: web
          args: ["usb", "server.run"]
          image: gcr.io/seinfeld/usb
          env:
            - name: APPSEARCH_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: appsearch
                  key: private_key
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: environment
            - name: FLASK_APP
              value: usb.server
            - name: SERVICE_NAME_BROKER
              value: $(SERVICE_NAME_BROKER)
            - name: SERVICE_NAME_RESULT
              value: $(SERVICE_NAME_RESULT)
            - name: SERVICE_NAME_APPSEARCH
              value: $(SERVICE_NAME_APPSEARCH)
            - name: LOGURU_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: logger
                  key: level
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: usb
                  key: base_url
          volumeMounts:
          - mountPath: /videos
            name: videos
            readOnly: true
          - mountPath: /thumbnails
            name: thumbnails
            readOnly: true
        - name: celeryflower
          args: ["usb", "tasks.flower"]
          image: gcr.io/seinfeld/usb
          env:
            - name: SERVICE_NAME_BROKER
              value: $(SERVICE_NAME_BROKER)
            - name: SERVICE_NAME_RESULT
              value: $(SERVICE_NAME_RESULT)
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: dsn
            - name: SENTRY_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: environment
      volumes:
        - name: thumbnails
          persistentVolumeClaim:
            claimName: thumbnails
        - name: videos
          persistentVolumeClaim:
            claimName: usb-videos
            readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
  - name: web
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: usb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: celeryflower
  name: celeryflower
spec:
  ports:
  - name: celeryflower
    port: 5555
    targetPort: 5555
  selector:
    io.kompose.service: usb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: usb-videos
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
  volumeName: usb-videos
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: usb-videos
spec:
  capacity:
    storage: 40Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /var/usb/videos
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: thumbnails
  name: thumbnails
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: thumbnails
# spec:
#   capacity:
#     storage: 40Gi
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   hostPath:
#     path: /var/usb/thumbnails
